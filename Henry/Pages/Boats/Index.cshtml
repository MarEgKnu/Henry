@page "{handler?}"
@using Henry.Interfaces
@model Henry.Pages.Boats.IndexModel
@inject IBoatRepository boatRepo;
@inject IMemberRepository memberRepo;
@inject IBookingRepository bookingRepo;
@inject IRepairRepository repairRepo;
@{
    ViewData["Title"] = "Bådsliste";
}

<h1>Bådsliste</h1>


@{
    // checks if the logged in user is verified, and is administrator
    if (memberRepo.VerifySessionAdmin(HttpContext))
    {
        <p>
            <a asp-page="CreateBoat">Opret en ny båd</a>
        </p>

    }
}
<a asp-page="BoatsOutSailing" style="float:right">Se både ude og sejle</a>

@if (HttpContext.Session.GetInt32("ViewOnlyAvailable") == 1)
{
    // display only if the user has already enabled it so they only see boats that are available
    <form method="get">
        <input type="submit" asp-page-handler="ShowBoth" value="Vis også utilgængelige både" class="btn btn-primary" />
    </form>
}
else
{
    <form method="get">
        <input type="submit" asp-page-handler="ShowAvailable" value="Vis kun tilgængelige både inden for antal timer" class="btn btn-primary" />
        <select asp-for="Hours">
            <option value="0">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
        </select>
    </form>

}
    
    @if (HttpContext.Session.GetInt32("ViewOnlyRepairBoats") == 1)
    {
        // display only if the user has already enabled it so they only see boats in need of repair
        <form method="get">
            <input type="submit" asp-page-handler="ShowAll" value="Vis alle både" class="btn btn-primary" />
        </form>
    }
    else
    {
        <form method="get">
            <input type="submit" asp-page-handler="ShowRepair" value="Vis kun både med reparationer" class="btn btn-primary" />
        </form>

    }

<table class="table">
    <thead>
        <tr>
            <th>Navn</th>
            <th>Status</th>
            <th>Beskrivelse</th>
            <th>Oprettet</th>
            <th>Bådtype</th>
            <th>Reparationer</th>
            <th>ID</th>
            <th>Billede</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var boat in boatRepo.GetAllBoats() )
        {
            // if the boat does not have any repairs, AND the user has the "viewonlyrepairboats" session var, display the boat
            // alternatively, if the user hasent enabled "viewonlyrepairboats", display all regardless
            if (Model.DisplayBoat("ViewOnlyRepairBoats", "ViewOnlyAvailable", boat, Model.Hours))
            {
                
                <tr>
                    <td>@boat.Name</td>
                    <td>
                        @if (bookingRepo.IsDateTimeBooked(DateTime.Now, DateTime.Now.AddHours(Model.Hours), boat.Id))
                        {
                            string booked = (Model.Hours == 0) ? "Booket lige nu" : $"Booket om {Model.Hours} timer";
                                            <p>@booked</p>
                        }
                        else
                        {
                            string booked = (Model.Hours == 0) ? "Ikke booket lige nu" : $"Ikke booket om {Model.Hours} timer";
                            <p>@booked</p>
                        }
                    </td>
                    <td>@boat.Description</td>
                    <td>@boat.Created.ToShortDateString()</td>
                    <td>@boat.Type</td>
                    <td>
                        @{
                            // if the boat dosent have any repairs
                            if (!repairRepo.HasAnyRepairs(boat.Id))
                            {
                                <p>Ingen reparationer</p>
                            }
                            else
                            {
                                // iterate through all repairs for this boat
                                <ul>
                                @foreach (var repair in repairRepo.GetRepairsForBoat(boat.Id))
                                {
                                    <li>
                                    Reparations titel: <a asp-page="/Repairs/ShowRepair" asp-route-id="@repair.RepairId">@repair.Title</a><br>
                                            Reparations beskrivelse: @repair.Description<br>
                                    @if (repair.Img != null)
                                    {

                                    <p>Billede af skade:</p> <img src="/Imgs/RepairImgs/@repair.Img" width="80" height="80">
                                
                                    }
                                    </li>
                                }
                                </ul>
                            }
                        }


                    </td>
                    <td>@boat.Id</td>
                    <td><img src="/Imgs/BoatImgs/@boat.Img" width="80" height="80" /></td>
                    @{
                        // checks if the logged in user is verified, and is administrator
                        if (memberRepo.VerifySessionAdmin(HttpContext))
                        {
                            <td><a asp-page="EditBoat" asp-route-id="@boat.Id">Rediger</a></td>
                            <td><a asp-page="DeleteBoat" asp-route-id="@boat.Id">Slet</a></td>
                        
                        }
                    }
                    <td><a asp-page="ShowBoat" asp-route-id="@boat.Id">Vis båd</a></td>

                </tr>
            }
        }
    </tbody>
</table>